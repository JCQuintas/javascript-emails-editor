{"version":3,"sources":["components/heading.ts","components/utils.ts","components/email-pill.ts","components/input.ts","components/button.ts","components/paper.ts","components/options.ts","index.ts"],"names":[],"mappings":"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","file":"index.js","sourceRoot":"../src","sourcesContent":["import { Options } from './options'\n\nexport const createHeading = (options: Options) => {\n  const h2 = document.createElement('h2')\n  h2.innerHTML = `Share <b>${options.title}</b> with others`\n  h2.className = 'emails-editor__heading'\n\n  return h2\n}\n","export const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n","import { emailRegex } from './utils'\n\nexport const createEmailPill = (\n  email: string,\n  onRemove: (email: string) => void\n) => {\n  const emailPillContainer = document.createElement('span')\n  emailPillContainer.className = 'emails-editor__email-pill'\n  if (!emailRegex.exec(email)) {\n    emailPillContainer.className =\n      emailPillContainer.className + ' emails-editor__email-pill--invalid-email'\n  }\n\n  const emailText = document.createElement('span')\n  emailText.append(email)\n  emailText.className = 'emails-editor__email-text'\n  emailPillContainer.append(emailText)\n\n  const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg')\n  svg.setAttribute('viewBox', '0 0 24 24')\n  svg.setAttribute('fill', 'none')\n  svg.setAttribute('class', 'emails-editor__close-svg')\n  svg.innerHTML = `<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M10.5858 12L4.2218 5.63602L5.63602 4.2218L12 10.5858L18.3639 4.2218L19.7782 5.63602L13.4142 12L19.7782 18.3639L18.3639 19.7782L12 13.4142L5.63602 19.7782L4.2218 18.3639L10.5858 12Z\" />`\n\n  const onClick = (event: Event) => {\n    event.preventDefault()\n    emailPillContainer.remove()\n    onRemove(email)\n  }\n\n  svg.addEventListener('click', onClick)\n\n  emailPillContainer.append(svg)\n\n  return emailPillContainer\n}\n","import { createEmailPill } from './email-pill'\nimport { Options } from './options'\n//junis@gmas.com, sasdas@aso.com, sasfasdasa\nexport const createInput = (options: Options) => {\n  const inputContainer = document.createElement('div')\n  inputContainer.className = 'emails-editor__input-container'\n\n  const textinput = document.createElement('input')\n  textinput.className = 'emails-editor__text-input'\n  textinput.placeholder = 'add more people...'\n\n  const createBlock = () => {\n    const value = textinput.value.trim()\n    if (value !== '') {\n      setEmails(value)\n      textinput.value = ''\n    }\n  }\n\n  const onKeyDown = (event: KeyboardEvent) => {\n    if (event.key === 'Enter' || event.key === ',') {\n      event.preventDefault()\n      createBlock()\n    }\n  }\n\n  const onPaste = (event: ClipboardEvent) => {\n    event.preventDefault()\n    event.stopPropagation()\n\n    const data = (event.clipboardData || (window as any).clipboardData).getData(\n      'text'\n    )\n    setEmails(data)\n  }\n\n  textinput.addEventListener('keydown', onKeyDown)\n  textinput.addEventListener('blur', createBlock)\n  textinput.addEventListener('paste', onPaste)\n\n  const focusTextInput = (event: Event) => {\n    if (event.target === textinput || event.target === inputContainer)\n      textinput.focus()\n  }\n\n  inputContainer.addEventListener('focus', focusTextInput)\n  inputContainer.addEventListener('click', focusTextInput)\n\n  inputContainer.append(textinput)\n\n  const onRemove = (email: string) => {\n    options.onChange && options.onChange('remove', email, getEmails())\n  }\n\n  const setEmails = (emails: string) => {\n    if (!emails) return\n\n    emails.split(',').forEach((v: string) => {\n      const value = v.trim()\n      if (value) {\n        inputContainer.insertBefore(createEmailPill(value, onRemove), textinput)\n        options.onChange && options.onChange('add', value, getEmails())\n      }\n    })\n\n    getEmails()\n  }\n\n  const getEmails = () => {\n    const elements = inputContainer.getElementsByClassName(\n      'emails-editor__email-pill'\n    )\n    return Array.from(elements)\n      .map(v => v.textContent)\n      .filter((v): v is string => !!v)\n  }\n\n  return {\n    container: inputContainer,\n    setEmails,\n    getEmails,\n  }\n}\n","export const createButton = (text: string, onClick: () => void) => {\n  const button = document.createElement('button')\n  button.innerText = text\n  button.className = 'emails-editor__button'\n\n  button.addEventListener('click', onClick)\n  return button\n}\n","import { Options } from './options'\nimport { createHeading } from './heading'\nimport { createInput } from './input'\nimport { createButton } from './button'\nimport { emailRegex } from './utils'\n\nexport const createPaper = (options: Options) => {\n  const div = document.createElement('div')\n  div.className = 'emails-editor__paper'\n  const contentSection = document.createElement('div')\n  contentSection.append(createHeading(options))\n\n  const { container: inputBlock, getEmails, setEmails } = createInput(options)\n\n  contentSection.append(inputBlock)\n  contentSection.className = 'emails-editor__content-section'\n\n  const buttonSection = document.createElement('div')\n  buttonSection.className = 'emails-editor__button-section'\n\n  const addEmail = () => {\n    setEmails(`email${Math.ceil(Math.random() * 10000)}@anymail.com`)\n  }\n\n  const getEmailsCount = () => {\n    window.alert(\n      `There are ${\n        getEmails().filter(v => !!emailRegex.exec(v)).length\n      } valid emails.`\n    )\n  }\n\n  buttonSection.append(createButton('Add email', addEmail))\n  buttonSection.append(createButton('Get emails count', getEmailsCount))\n\n  div.append(contentSection)\n  div.append(buttonSection)\n\n  return {\n    container: div,\n    getEmails,\n    setEmails,\n  }\n}\n","export interface Options {\n  container: HTMLElement\n  title?: string\n  onChange?: (\n    type: 'add' | 'remove',\n    email: string,\n    currentEmails: string[]\n  ) => void\n}\n\nexport const defaultOptions: Partial<Options> = {\n  title: 'Blank',\n}\n","import { createPaper } from './components/paper'\nimport { Options, defaultOptions } from './components/options'\n\ndeclare const window: any\n\nexport const EmailsEditor = (options: Options) => {\n  const _options = { ...defaultOptions, ...options }\n  const content = createPaper(_options)\n  options.container.append(content.container)\n\n  return {\n    getEmails: content.getEmails,\n    setEmails: content.setEmails,\n  }\n}\n\nwindow.EmailsEditor = EmailsEditor\n"]}